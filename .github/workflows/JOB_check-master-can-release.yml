name: check-master-can-release
run-name: check-master-can-release

on:
  workflow_call:

permissions:
  contents: read

jobs:
  check-master-can-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Check master is passing
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { check_runs } } = await github.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              filter: 'latest',
            });
            const masterCheck = check_runs.find(({ name }) => name === 'master');
            if (masterCheck.conclusion !== 'success') {
              throw new Error('Master is not passing');
            }

      - name: Check there are commits in master since last release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { published_at } } = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const lastRelease = new Date(published_at);
            const { data: { commits } } = await github.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: lastRelease.toISOString(),
              head: 'master',
            });
            if (commits.length === 0) {
              throw new Error('No commits in master since last release');
            }
