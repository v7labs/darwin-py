# Run tests
name: tests
run-name: Tests

on:
  workflow_call:
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  test:
    name: "Run Testing OS: ${{ matrix.os }} Python: ${{ matrix.python-version }}"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Free Disk space
        shell: bash
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo rm -rf /usr/local/lib/android  # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.head_ref || github.ref }}
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies with retry
        uses: nick-invision/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            bash -c "pip install poetry pytest && \
                     poetry install --no-interaction --no-root -vvv --all-extras && \
                     poetry install --no-interaction --no-root --all-extras -vvv && \
                     pip install wheel && \
                     pip install --upgrade setuptools && \
                     pip install --editable '.[test,ml,medical,dev, ocv]'"

      - name: Install ffmpeg (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install ffmpeg (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: brew install ffmpeg

      - name: Install ffmpeg (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: choco install ffmpeg -y

      - name: Run pytest
        shell: bash # Stops Windows hosts from using PowerShell
        run: |
          python -m pytest
