name: Version Bump
run-name: Version bump ${{ inputs.bump_type }}${{ inputs.test_mode && ' (TEST)' || '' }}

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      test_mode:
        description: "Run in test mode (publishes to Test PyPI)"
        required: true
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e
        with:
          egress-policy: audit

      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.9"

      - name: Configure Git
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

      - name: Bump version
        run: |
          python deploy/increase_version.py --${{ inputs.bump_type }}
          BASE_VERSION=$(cat .version)

          if [[ "${{ inputs.test_mode }}" == "true" ]]; then
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            TEST_VERSION="${BASE_VERSION}-test.${TIMESTAMP}"
            # Update version in pyproject.toml and __init__.py
            sed -i "s/^version = .*/version = \"${TEST_VERSION}\"/" pyproject.toml
            sed -i "s/__version__ = .*/__version__ = \"${TEST_VERSION}\"/" darwin/__init__.py
            NEW_VERSION="${BASE_VERSION}-test.${TIMESTAMP}"
            TAG_PREFIX="test-"
            BRANCH_NAME="test/version-bump"
          else
            NEW_VERSION="${BASE_VERSION}"
            TAG_PREFIX="v"
            BRANCH_NAME="master"
          fi
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "TAG_PREFIX=${TAG_PREFIX}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Commit and push changes
        if: ${{ inputs.test_mode != 'true' }}
        run: |
          git add pyproject.toml darwin/__init__.py
          git commit -m "Version bump to ${{ env.NEW_VERSION }}"
          git push origin HEAD:${BRANCH_NAME}

      - name: Create test branch
        if: ${{ inputs.test_mode == 'true' }}
        run: |
          git checkout -b ${BRANCH_NAME}
          git push origin ${BRANCH_NAME}

      - name: Create and push tag
        run: |
          git tag -a "${TAG_PREFIX}${NEW_VERSION}" -m "bump version to ${TAG_PREFIX}${NEW_VERSION}"
          git push origin "${TAG_PREFIX}${NEW_VERSION}"
