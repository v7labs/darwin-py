name: Version Bump
run-name: Version bump ${{ inputs.bump_type }}${{ inputs.test_mode && ' (TEST)' || '' }}

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      test_mode:
        description: "Run in test mode (publishes to Test PyPI)"
        required: true
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.10.4
        with:
          egress-policy: audit

      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.9"

      - name: Setup Poetry
        uses: abatilo/actions-poetry@0dd19c9498c3dc8728967849d0d2eae428a8a3d8
        with:
          poetry-version: "1.3.1"

      - name: Configure Git
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

      - name: Bump version
        run: |
          if [[ "${{ inputs.test_mode }}" == "true" ]]; then
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            TEST_VERSION="0.0.0-test.${TIMESTAMP}"
            poetry version ${TEST_VERSION}
            echo "NEW_VERSION=${TEST_VERSION}" >> $GITHUB_ENV
            echo "TAG_PREFIX=test-" >> $GITHUB_ENV
            echo "BRANCH_NAME=test/version-bump" >> $GITHUB_ENV
          else
            CURRENT_VERSION=$(poetry version -s)
            poetry version ${{ inputs.bump_type }}
            NEW_VERSION=$(poetry version -s)
            echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
            echo "TAG_PREFIX=v" >> $GITHUB_ENV
            echo "BRANCH_NAME=master" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        run: |
          git add pyproject.toml
          git commit -m "Version bump to ${TAG_PREFIX}${NEW_VERSION}"
          if [[ "${{ inputs.test_mode }}" == "true" ]]; then
            git checkout -b ${BRANCH_NAME}
          fi
          git push origin HEAD:${BRANCH_NAME}

      - name: Create and push tag
        run: |
          git tag -a "${TAG_PREFIX}${NEW_VERSION}" -m "Release version ${NEW_VERSION}"
          git push origin "${TAG_PREFIX}${NEW_VERSION}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_PREFIX }}${{ env.NEW_VERSION }}
          name: ${{ env.TAG_PREFIX }}${{ env.NEW_VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ inputs.test_mode }}

      - name: Notify Slack
        uses: ./.github/workflows/JOB_slack_message.yml
        with:
          icon: ":arrows_counterclockwise:"
          message: |
            ${{ inputs.test_mode && '[TEST] ' || '' }}Version ${{ env.TAG_PREFIX }}${{ env.NEW_VERSION }} has been bumped and tagged
            Type: ${{ inputs.bump_type }}
